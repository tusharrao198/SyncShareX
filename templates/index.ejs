<!DOCTYPE html>
<html lang="en">

	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title>SyncShareX</title>
		<script src="/socket.io/socket.io.js"></script>
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
			integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
	</head>

	<body>
		<div class="container">
			<div><% if(!authenticated){ %>
				<h1>SIGN IN </h1>
				<a id="sign" href="/auth/google"><i class="fa-brands fa-google"></i> SignIn</a>
				<% }else{ %>
				<h1>Logged in as: <%= username %></h1>
				<a id="logout" href="/auth/logout"><i class="fa-brands fa-google"></i> Logout</a>
				<% } %>
			</div>
			</br>
			</br>
			</br>
			</br>
			<h1>SyncShareX - Sync your file local to remote server!</h1>

			<form action="/upload" method="POST">

				<div class="form-group">
					<div class="input-group mb-3">
						<span class="input-group-text" id="inputGroup-sizing-default">Enter the local directory path:
						</span>
						<input required="true" name="localpath" id="localpath" type="text" class="form-control"
							aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default"
							placeholder="Absolute path of your source directory">
					</div>
					<div class="input-group mb-3">
						<span class="input-group-text" id="inputGroup-sizing-default">Enter the Remote Destination
							directory path: </span>
						<input name="destpath" id="destpath" type="text" class="form-control"
							aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default"
							placeholder="Default remote path set to uploads directory in your drive">
					</div>
				</div>
			</form>
			</br></br>
			<div><% if(authenticated){ %>
				<h1>SYNC </h1>
				<button id="sync" class="btn btn-primary">Sync</button>
				<ul id="sync-output"></ul>
				<% }else{ %>
				<button disabled="true" class="btn btn-primary">Sync</button>
				<% } %>
			</div>

			</br>
			</br>
			
			<div class="container">
				<button id="log-button">Log Message</button>
				<ul id="log-list"></ul>
			</div>

		</div>

		</br>
		</br>

		<div id="progress"></div>


		<script src="scripts/ejs.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
			crossorigin="anonymous"></script>

		<script>
			const socket = io();

			document.getElementById('log-button').addEventListener('click', () => {
				console.log('Button clicked');
				socket.emit('log', 'Button clicked');
			});

			
			// socket - disconnect trigger during logout;
			var isloggedIn = "<%= authenticated %>";
			if (isloggedIn === 'true') {
				console.log("authenticated = ", isloggedIn);
				document.getElementById('logout').addEventListener('click', () => {
					console.log('Logout Button clicked');
					socket.emit('disconnect', 'Client Disconnecting clicked');
					socket.disconnect();
				});

				document.getElementById('sync').addEventListener('click', () => {
					console.log('Sync Button clicked');
					// socket.emit('sync', 'Start Syncing');

					const source = document.getElementById("localpath").value;
					const dest = document.getElementById("destpath").value;
					socket.emit('transfer', source, dest);
				});
			

			}

			socket.on('log', (message) => {
					console.log(`Received log message inside html: ${message}`);
					const listItem = document.createElement('li');
					listItem.innerText = message;
					document.getElementById('log-list').appendChild(listItem);
				});

			socket.on('sync-output', (message) => {
				console.log(`Received sync-output message inside html: ${message}`);
				const listItem = document.createElement('li');
				listItem.innerText = message;
				document.getElementById('sync-output').appendChild(listItem);
				listItem.innerText = "Sync - Successful!";
				document.getElementById('sync-output').appendChild(listItem);
			});

			socket.on('progress', (data) => {
				const progress = document.getElementById('progress');
				const listItem = document.createElement('li');
				listItem.innerText = data;
				progress.appendChild(listItem);
			});



		</script>
	</body>

</html>